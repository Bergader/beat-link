name: Create library jar

on:
  push:
    branches:
      - master

jobs:
  build_jar:
    name: Build library jar
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Determine release tag, library jar name, and snapshot status
        run: |
          PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          RELEASE_TAG="v$PROJECT_VERSION"
          HUMAN_VERSION=${PROJECT_VERSION/SNAPSHOT/Preview}
          echo "::set-env name=release_tag::$RELEASE_TAG"
          echo "::set-env name=release_name::$PROJECT_VERSION"
          echo "::set-env name=jar_name::beat-link-$HUMAN_VERSION.jar"
          if [[ $RELEASE_TAG =~ .*-SNAPSHOT ]]
          then
            echo "::set-env name=release_snapshot::true"
          else
            echo "::set-env name=release_snapshot::false"
          fi

      - name: Cache Maven dependencies
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-mvn-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-mvn-

      - name: Install dependencies and compile
        run: mvn compile

      - name: Build library jar
        run: |
          mvn package
          mv target/beat-link-${release_tag#v}.jar ./$jar_name

      - name: Upload library jar
        if: success()
        uses: Xotl/cool-github-releases@v1
        with:
          mode: update
          tag_name: ${{ env.release_tag }}
          release_name: ${{ env.release_name }}
          isPrerelease: true
          replace_assets: ${{ env.release_snapshot }}
          assets: ${{ env.jar_name }}
          github_token: ${{ github.token }}

  succeed_if_skipped:
    name: Skipping CI
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '[skip ci]')"

    steps:
      - name: Placate GitHub Actions
        run: echo "CI skipped but want action to succeed anyway."
